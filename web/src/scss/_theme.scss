// colors
$colors: (
  primary: #db9e3f,
  "white": #fff,
  light: #f7f7f7,
  "grey": #999,
  secondary: #666,
  dark: #222
);

$border-color: #d4d9de;

@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}
// width height
.w-100 {
  width: 100%;
}
.h-100 {
  height: 100%;
}
// border
@each $item in (top, right, bottom, left) {
  .border-#{$item}{
    border-#{$item}: 1px solid $border-color;
  }
}

// display
$display-types: (
  flex: flex,
  block: block,
  inline-block: inline-block,
  inline: inline
);
@each $typeKey, $type in $display-types {
  .d-#{$typeKey} {
    display: $type;
  }
}

// text
@each $key in (left, center, right) {
  .text-#{$key}{
    text-align: $key;
  }
}
// font size
$base-font-size: 1rem;
$font-sizes: (xs: 0.75, sm: 0.8, md: 1, lg: 1.25, xl: 1.5, xxl: 2);
@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey}{
    font-size: $size * $base-font-size;
  }
}

// flex
$flex-types: (
  jc: justify-content,
  ai: align-items
);
.flex-wrap {
  flex-wrap: wrap;
}
$flex-jc: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch,
  between: space-between,
  around: space-around
);
$flex-ai: (
  start: flex-start,
  end: flex-end,
  center: center,
  stretch: stretch
);
@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}
@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}
.flex-1 {
  flex: 1;
}
// spacing
$spacing-types: (m: margin, p: padding);
$spacing-direction: (t: top, r: right, b: bottom, l: left);
$spacing-base: 1rem;
$spacing-sizes: (0: 0, 1: 0.25, 2: 0.5, 3: 1, 4: 1.5, 5: 3);
@each $typeKey, $type in $spacing-types {
  // m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey}{
      #{$type}: $size * $spacing-base;
    }
  }
  // mx-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey}{
      #{$type}-left: $size * $spacing-base;
      #{$type}-right: $size * $spacing-base;
    }
  }
  // my-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey}{
      #{$type}-top: $size * $spacing-base;
      #{$type}-bottom: $size * $spacing-base;
    }
  }

  // mt-1 ...
  @each $directionKey, $direction in $spacing-direction {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey}{
        #{$type}-#{$direction}: $size * $spacing-base;
      }
    }
  }
}

// button
.btn {
  border:none;
  padding: 0.5rem 1rem;
  
  &.btn-sm {
    font-size: 0.7em;
    padding: 0.3rem 0.5rem;
    border-radius: 2px;
  }
}
// nav
.nav {
  .nav-item {
    border-bottom: 3px solid transparent;
    &.active {
      padding-bottom: 0.2rem;
      color: map-get($colors, 'primary');
      border-bottom-color: map-get($colors, 'primary');
    }
  }
  &.is-inverse {
    .nav-item {
      &.active {
        color: map-get($colors, 'white');
        border-bottom-color: map-get($colors, 'white');
      }
    }
  }
}

// card
.card {
  border-bottom: 1px solid $border-color;
  .card-header {
    .card-title {
      font-size: 1.25rem;
    }
  }
}